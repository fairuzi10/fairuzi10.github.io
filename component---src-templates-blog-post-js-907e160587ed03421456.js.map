{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/utils/theme.js","webpack:///./src/components/navbar.js","webpack:///./src/components/footer.js","webpack:///./src/components/stretch.js","webpack:///./src/components/layout.js","webpack:///./src/components/wrapper.js","webpack:///./src/components/utils.js"],"names":["__webpack_exports__","_ref","data","post","_post$frontmatter","frontmatter","title","description","date","tags","thumbnail","disqusConfig","url","fields","slug","identifier","tagsText","map","tag","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_5___default","a","to","key","className","relatedPost","edges","nodeObject","node","_node$frontmatter","id","_components_wrapper__WEBPACK_IMPORTED_MODULE_2__","single","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","meta","name","content","publicURL","_components_utils__WEBPACK_IMPORTED_MODULE_8__","dangerouslySetInnerHTML","__html","html","disqus_react__WEBPACK_IMPORTED_MODULE_3__","shortname","config","query","__webpack_require__","d","COLOR","primary","black","blue","blueFade","white","yellow","gray","orange","NavbarWrapper","styled_base_browser_esm","target","styles","LinkNav","children","core_browser_esm","NavItem","gatsby_link_default","activeClassName","partiallyActive","Example","props","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","render","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","aria-label","Nav","navbar_LinkNav","React","Component","Footer","marginTop","borderTop","padding","textAlign","backgroundColor","fontSize","footer","StretchContainer","Stretch","FullPage","Layout","Helmet_default","css","navbar_Example","mid","ColProps","md","lg","xl","layout","Container","Row","Col","Card","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","margin","BlackLink","Link",":hover","textDecoration"],"mappings":"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","file":"component---src-templates-blog-post-js-907e160587ed03421456.js","sourcesContent":["import React from 'react'\nimport Wrapper from '../components/wrapper'\nimport { DiscussionEmbed } from 'disqus-react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport 'katex/dist/katex.min.css'\nimport 'prismjs/themes/prism-okaidia.css'\nimport { Card } from '../components/utils';\n\nexport default ({ data }) => {\n  const post = data.post\n  const {title, description, date, tags, thumbnail } = post.frontmatter\n  const disqusConfig = {\n    url: 'http://fairuzi10.github.io/blog' + post.fields.slug,\n    identifier: 'blog' + post.fields.slug,\n    title: post.frontmatter.title,\n  }\n\n  const tagsText = tags.map(tag => (\n    <Link to={`/blog/tag/${tag}/`} key={tag} className='mx-1'>#{tag} </Link>\n  ))\n  const relatedPost = data.relatedPost.edges.map((nodeObject) => {\n    const node = nodeObject.node\n    const { title, description } = node.frontmatter\n    return (\n      <div className=\"col-md-6 pt-3\" key={node.id}>\n        <strong>\n          <Link to={`/blog/${node.fields.slug}/`} className=\"black-link\">\n            {title}\n          </Link>\n        </strong><br />\n        {description}\n      </div>\n    )\n  })\n\n  return (\n    <Wrapper single>\n      <Helmet\n        title={title}\n        meta={[\n          { name: 'description', content: description },\n          { name: 'og:title', content: title },\n          { name: 'og:image', content: thumbnail.publicURL }\n        ]}\n      />\n      <Card>\n        { date }\n        <hr />\n        <h1>{title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} className=\"blog-post\" />\n        <hr />\n        {tagsText}\n        <hr />\n        <div>\n          <strong><span className=\"black-link\">Related Post:</span></strong><br />\n          <div className=\"row\">\n            {relatedPost}\n          </div>\n        </div>\n        <hr />\n      </Card>\n      <Card>\n        <DiscussionEmbed shortname=\"fairuzi10-github-io\" config={disqusConfig} />\n      </Card>\n    </Wrapper>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!, $tags: [String]!) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM YYYY\")\n        description\n        tags\n        thumbnail {\n          publicURL\n        }\n      }\n      fields {\n        slug\n      }\n    }\n    relatedPost: allMarkdownRemark(\n      limit: 2,\n      sort: { fields: [frontmatter___weight], order: DESC},\n      filter: {frontmatter: {tags : { in: $tags }}, fields: { slug: { ne: $slug}}}\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","export const COLOR = {\n  primary: '#007bff',\n  black: '#14171A',\n  blue: '#1B1464',\n  blueFade: '#e6ecf0',\n  white: '#ffffff',\n  yellow: '#f1c40f',\n  gray: '#34495e',\n  orange: '#F79F1F',\n}\n","import styled from '@emotion/styled';\nimport Link from 'gatsby-link';\nimport React from 'react';\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem } from 'reactstrap';\n\nconst NavbarWrapper = styled.div({\n  marginBottom: '3rem',\n})\n\nconst LinkNav = ({to, children}) => (\n  <NavItem>\n    <Link className='nav-link' to={to} activeClassName=\"active\" partiallyActive>{ children }</Link>\n  </NavItem>\n)\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n  render() {\n    return (\n      <NavbarWrapper>\n        <Navbar color=\"primary\" dark expand=\"md\">\n          <NavbarBrand href=\"/\">Fairuzi10</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar aria-label=\"Toggle navbar\">\n            <Nav className=\"ml-auto\" navbar>\n              <LinkNav to='/blog/'>Blog</LinkNav>\n              <LinkNav to='/project/'>Project</LinkNav>\n              <LinkNav to='/meme/'>Meme</LinkNav>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </NavbarWrapper>\n    )\n  }\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { COLOR } from '../utils/theme';\n\nconst Footer = styled.footer({\n  marginTop: '1rem',\n  borderTop: '1px solid #e5e5e5',\n  padding: '2rem 0',\n  textAlign: 'center',\n  color: COLOR.white,\n  backgroundColor: COLOR.primary,\n  fontSize: '0.8rem',\n})\n\nexport default () => (\n  <Footer>\n    Muhammad Fairuzi Teguh © 2019\n  </Footer>\n)\n","import styled from '@emotion/styled'\n\nexport const StretchContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const StretchedContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const Stretch = styled.div`\n  flex: 1;\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport Navbar from '../components/navbar'\nimport Footer from '../components/footer'\nimport styled from '@emotion/styled'\nimport { Global, css } from '@emotion/core'\nimport {\n  StretchContainer,\n} from '../components/stretch'\nimport { COLOR } from '../utils/theme';\n\nconst FullPage = styled.div({\n  minHeight: '100vh',\n  height: '1px',\n})\n\nconst Layout = ({ children }) => (\n  <FullPage>\n    <Helmet\n      title='Fairuzi10'\n      meta={[\n        { name: 'google-site-verification', content: 'uu3IRN8Av5aq9r0lEKhIJjoLFIi1T8TFKymt0f-68bk' },\n      ]}\n    />\n    <Global styles={css`\n      @import url('https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css');\n      @import url('https://fonts.googleapis.com/css?family=Arvo');\n\n      * {\n        font-family: 'Arvo';\n      }\n\n      body {\n        background-color: ${COLOR.blueFade};\n      }\n\n      .black-link {\n        color: black!important;\n      }\n\n      .black-link:hover {\n        color: black!important;\n      }\n\n      .grey-link {\n        color: #777!important;\n      }\n\n      .grey-link:hover {\n        color: #777!important;\n      }\n\n      .img-caption {\n        // display: block;\n        margin-top: -1em;\n        text-align: center;\n        color: rgba(0,0,0,.5);\n        // font-style: normal;\n        margin-bottom: 1em;\n      }\n\n      .gatsby-resp-image-link {\n        margin-bottom: 1em;\n      }\n\n      blockquote {\n        background: #f8f9fa;\n        border-left: 0.3em solid #e5e5e5;\n        padding: 1em;\n      }\n\n      hr.section-divider {\n        margin: 3em 0;\n        border: 0;\n        text-align: center;\n      }\n\n      hr.section-divider:before {\n        content: '...';\n        font-size: 2em;\n        top: -1em;\n        position: relative;\n        letter-spacing: 1em;\n        margin-left: 1em;\n        color: rgb(33, 37, 41);\n      }\n\n      .blog-post p {\n        text-align: justify;\n      }\n    `} />\n    <StretchContainer>\n      <Navbar/>\n      { children }\n      <Footer/>\n    </StretchContainer>\n  </FullPage>\n)\n\nexport default Layout\n","import React from 'react'\nimport Layout from './layout.js'\nimport {\n  Row,\n  Col,\n  Container,\n} from 'reactstrap'\nimport {\n  Stretch,\n} from '../components/stretch'\n\n/**\n * Single means one page only contains 1 column.\n * Mid means one page only contains 1 column and should be positioned in the center\n */\nexport default ({ children, single, mid }) => {\n  if (mid) single = true;\n  const ColProps = single? { md: '10', lg: '9', xl: '8'}: {}\n  return (\n    <Layout>\n      <Stretch className={ mid? 'd-flex align-items-center text-center': '' }>\n        <Container>\n          <Row className='justify-content-center'>\n            <Col {...ColProps}>\n              { children }\n            </Col>\n          </Row>\n        </Container>\n      </Stretch>\n    </Layout>\n  )\n}\n","import styled from '@emotion/styled'\nimport { COLOR } from '../utils/theme';\nimport { Link } from 'gatsby';\n\nexport const Card = styled.div({\n  backgroundColor: COLOR.white,\n  padding: '2rem',\n  margin: '1rem',\n})\n\nexport const BlackLink = styled(Link)({\n  color: COLOR.black,\n  ':hover': {\n    color: COLOR.black,\n    textDecoration: 'underline',\n  },\n})\n"],"sourceRoot":""}