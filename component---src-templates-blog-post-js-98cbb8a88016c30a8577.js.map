{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/navbar.js","webpack:///./src/components/footer.js","webpack:///./src/components/stretch.js","webpack:///./src/components/layout.js","webpack:///./src/components/wrapper.js"],"names":["__webpack_exports__","_ref","data","post","_post$frontmatter","frontmatter","title","description","date","tags","disqusConfig","url","fields","slug","identifier","tagsText","map","tag","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_5___default","a","to","key","className","relatedPost","edges","nodeObject","node","_node$frontmatter","id","_components_wrapper__WEBPACK_IMPORTED_MODULE_2__","single","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","meta","name","content","dangerouslySetInnerHTML","__html","html","disqus_react__WEBPACK_IMPORTED_MODULE_3__","shortname","config","query","NavbarWrapper","styled_base_browser_esm","target","styles","LinkNav","children","core_browser_esm","NavItem","gatsby_link_default","Example","props","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","render","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","aria-label","Nav","navbar_LinkNav","React","Component","Footer","footer","StretchContainer","Stretch","FullPage","Layout","_ref2","Helmet_default","layout_ref","navbar_Example","mid","ColProps","md","lg","xl","layout","Container","Row","Col"],"mappings":"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","file":"component---src-templates-blog-post-js-98cbb8a88016c30a8577.js","sourcesContent":["import React from 'react'\nimport Wrapper from '../components/wrapper'\nimport { DiscussionEmbed } from 'disqus-react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\n\nimport 'katex/dist/katex.min.css'\nimport 'prismjs/themes/prism-okaidia.css'\n\nexport default ({ data }) => {\n  const post = data.post\n  const {title, description, date, tags } = post.frontmatter\n  const disqusConfig = {\n    url: 'http://fairuzi10.github.io/blog' + post.fields.slug,\n    identifier: 'blog' + post.fields.slug,\n    title: post.frontmatter.title,\n  }\n\n  const tagsText = tags.map(tag => (\n    <Link to={`/blog/tag/${tag}/`} key={tag} className='mx-1'>#{tag} </Link>\n  ))\n  const relatedPost = data.relatedPost.edges.map((nodeObject) => {\n    const node = nodeObject.node\n    const { title, description } = node.frontmatter\n    return (\n      <div className=\"col-md-6 pt-3\" key={node.id}>\n        <strong>\n          <Link to={`/blog/${node.fields.slug}/`} className=\"black-link\">\n            {title}\n          </Link>\n        </strong><br />\n        {description}\n      </div>\n    )\n  })\n\n  return (\n    <Wrapper single>\n      <Helmet\n        title={post.frontmatter.title}\n        meta={[\n          { name: 'description', content: description },\n        ]}\n      />\n      { date }\n      <hr />\n      <h1>{title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} className=\"blog-post\" />\n      <hr />\n      {tagsText}\n      <hr />\n      <div>\n        <strong><span className=\"black-link\">Related Post:</span></strong><br />\n        <div className=\"row\">\n          {relatedPost}\n        </div>\n      </div>\n      <hr />\n      <DiscussionEmbed shortname=\"fairuzi10-github-io\" config={disqusConfig} />\n    </Wrapper>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!, $tags: [String]!) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM YYYY\")\n        description\n        tags\n      }\n      fields {\n        slug\n      }\n    }\n    relatedPost: allMarkdownRemark(\n      limit: 2,\n      sort: { fields: [frontmatter___weight], order: DESC},\n      filter: {frontmatter: {tags : { in: $tags }}, fields: { slug: { ne: $slug}}}\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport Link from 'gatsby-link'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem } from 'reactstrap'\n\nconst NavbarWrapper = styled.div`\n  margin-bottom: 3rem;\n`\n\nconst LinkNav = ({to, children}) => (\n  <NavItem>\n    <Link className='nav-link' to={ to }>{ children }</Link>\n  </NavItem>\n)\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n  render() {\n    return (\n      <NavbarWrapper>\n        <Navbar color='light' light expand=\"md\">\n          <NavbarBrand href=\"/\">Fairuzi10</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar aria-label=\"Toggle navbar\">\n            <Nav className=\"ml-auto\" navbar>\n              <LinkNav to='/blog/'>Blog</LinkNav>\n              <LinkNav to='/project/'>Project</LinkNav>\n              <LinkNav to='/meme/'>Meme</LinkNav>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </NavbarWrapper>\n    )\n  }\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Footer = styled.footer`\n  margin-top: 1rem;\n  border-top: 1px solid #e5e5e5;\n  padding: 2rem 0;\n  text-align: center;\n  color: #777;\n  background-color: #f8f9fa;\n  font-size: 0.8rem;\n`\n\nexport default () => (\n  <Footer>\n    Muhammad Fairuzi Teguh Â© 2018\n  </Footer>\n)\n","import styled from '@emotion/styled'\n\nexport const StretchContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const StretchedContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const Stretch = styled.div`\n  flex: 1;\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport Navbar from '../components/navbar'\nimport Footer from '../components/footer'\nimport styled from '@emotion/styled'\nimport { Global, css } from '@emotion/core'\nimport {\n  StretchContainer,\n} from '../components/stretch'\n\nconst FullPage = styled.div`\n  min-height: 100vh;\n  height: 1px;\n`\n\nconst Layout = ({ children }) => (\n  <FullPage>\n    <Helmet\n      title='Fairuzi10'\n      meta={[\n        { name: 'google-site-verification', content: 'uu3IRN8Av5aq9r0lEKhIJjoLFIi1T8TFKymt0f-68bk' },\n      ]}\n    />\n    <Global styles={css`\n      @import url('https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css');\n      @import url('https://fonts.googleapis.com/css?family=Arvo');\n\n      * {\n        font-family: 'Arvo';\n      }\n\n      .black-link {\n        color: black!important;\n      }\n\n      .black-link:hover {\n        color: black!important;\n      }\n\n      .grey-link {\n        color: #777!important;\n      }\n\n      .grey-link:hover {\n        color: #777!important;\n      }\n\n      .img-caption {\n        // display: block;\n        margin-top: -1em;\n        text-align: center;\n        color: rgba(0,0,0,.5);\n        // font-style: normal;\n        margin-bottom: 1em;\n      }\n\n      .gatsby-resp-image-link {\n        margin-bottom: 1em;\n      }\n\n      blockquote {\n        background: #f8f9fa;\n        border-left: 0.3em solid #e5e5e5;\n        padding: 1em;\n      }\n\n      hr.section-divider {\n        margin: 3em 0;\n        border: 0;\n        text-align: center;\n      }\n\n      hr.section-divider:before {\n        content: '...';\n        font-size: 2em;\n        top: -1em;\n        position: relative;\n        letter-spacing: 1em;\n        margin-left: 1em;\n        color: rgb(33, 37, 41);\n      }\n\n      .blog-post p {\n        text-align: justify;\n      }\n    `} />\n    <StretchContainer>\n      <Navbar/>\n      { children }\n      <Footer/>\n    </StretchContainer>\n  </FullPage>\n)\n\nexport default Layout\n","import React from 'react'\nimport Layout from './layout.js'\nimport {\n  Row,\n  Col,\n  Container,\n} from 'reactstrap'\nimport {\n  Stretch,\n} from '../components/stretch'\n\n/**\n * Single means one page only contains 1 column.\n * Mid means one page only contains 1 column and should be positioned in the center\n */\nexport default ({ children, single, mid }) => {\n  if (mid) single = true;\n  const ColProps = single? { md: '10', lg: '9', xl: '8'}: {}\n  return (\n    <Layout>\n      <Stretch className={ mid? 'd-flex align-items-center text-center': '' }>\n        <Container>\n          <Row className='justify-content-center'>\n            <Col {...ColProps}>\n              { children }\n            </Col>\n          </Row>\n        </Container>\n      </Stretch>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}