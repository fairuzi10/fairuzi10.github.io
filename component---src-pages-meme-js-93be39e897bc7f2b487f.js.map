{"version":3,"sources":["webpack:///./src/pages/meme.js","webpack:///./src/components/navbar.js","webpack:///./src/components/footer.js","webpack:///./src/components/stretch.js","webpack:///./src/components/layout.js","webpack:///./src/components/wrapper.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","_components_wrapper_js__WEBPACK_IMPORTED_MODULE_2__","gatsby__WEBPACK_IMPORTED_MODULE_3__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","MemePage","_ref","images","array","counter","slice","length","index","Math","floor","random","temp","shuffle","data","allFile","edges","map","nodeObject","src","node","childImageSharp","fluid","path","relativePath","postUrl","indexOf","a","createElement","to","key","className","evenImages","filter","el","idx","oddImages","meta","name","content","xs","md","NavbarWrapper","Object","styled_base_browser_esm","target","styles","LinkNav","children","react_default","reactstrap_es","gatsby_link_default","Example","props","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","render","color","light","expand","href","onClick","navbar","aria-label","navbar_LinkNav","React","Component","Footer","footer","StretchContainer","Stretch","FullPage","Layout","_ref2","Helmet_default","title","core_browser_esm","layout_ref","navbar_Example","single","mid","ColProps","lg","xl","layout"],"mappings":"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","file":"component---src-pages-meme-js-93be39e897bc7f2b487f.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport Wrapper from '../components/wrapper.js'\nimport { graphql, Link } from 'gatsby'\nimport {\n  Row,\n  Col,\n} from 'reactstrap'\n\nconst shuffle = (array) => {\n  array = array.slice()\n  let counter = array.length;\n\n  while (counter > 0) {\n    const index = Math.floor(Math.random() * counter);\n    counter--;\n    const temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n  return array;\n}\n\nconst MemePage = ({\n  data: {\n    allFile: { edges },\n  },\n}) => {\n  const memes = shuffle(edges)\n  const images = memes.map((nodeObject) => {\n    const src = nodeObject.node.childImageSharp.fluid.src\n    const path = nodeObject.node.relativePath\n    const postUrl = '/blog/' + path.slice(0, path.indexOf('/')) + '/'\n    return (\n      <Link to={postUrl} key={src}>\n        <img className=\"img-fluid p-3\" src={src}></img>\n      </Link>\n    )\n  })\n  const evenImages = images.filter((el, idx) => idx%2 == 0)\n  const oddImages = images.filter((el, idx) => idx%2 == 1)\n  return (\n    <Wrapper>\n      <Helmet\n        meta={[\n          { name: 'description', content: 'Kumpulan meme yang ada pada blog ini.' },\n        ]}\n      />\n      <h5 className=\"text-center\">Klik gambar untuk membaca pos dan mendapatkan konteksnya :)</h5>\n      <Row className=\"justify-content-center\">\n        <Col className=\"text-center\" xs=\"12\" md=\"6\">{evenImages}</Col>\n        <Col className=\"text-center\" xs=\"12\" md=\"6\">{oddImages}</Col>\n      </Row>\n    </Wrapper>\n  )\n}\n\nexport const pageQuery = graphql`\n  {\n    allFile(filter:{absolutePath:{regex:\"/meme\\//\"}}) {\n      edges {\n        node {\n          childImageSharp {\n            fluid(maxWidth:500) {\n              src\n            }\n          }\n          relativePath\n        }\n      }\n    }\n  }\n`\n\nexport default MemePage\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport Link from 'gatsby-link'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem } from 'reactstrap'\n\nconst NavbarWrapper = styled.div`\n  margin-bottom: 3rem;\n`\n\nconst LinkNav = ({to, children}) => (\n  <NavItem>\n    <Link className='nav-link' to={ to }>{ children }</Link>\n  </NavItem>\n)\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n  render() {\n    return (\n      <NavbarWrapper>\n        <Navbar color='light' light expand=\"md\">\n          <NavbarBrand href=\"/\">Fairuzi10</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse isOpen={this.state.isOpen} navbar aria-label=\"Toggle navbar\">\n            <Nav className=\"ml-auto\" navbar>\n              <LinkNav to='/blog/'>Blog</LinkNav>\n              <LinkNav to='/project/'>Project</LinkNav>\n              <LinkNav to='/meme/'>Meme</LinkNav>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </NavbarWrapper>\n    )\n  }\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst Footer = styled.footer`\n  margin-top: 1rem;\n  border-top: 1px solid #e5e5e5;\n  padding: 2rem 0;\n  text-align: center;\n  color: #777;\n  background-color: #f8f9fa;\n  font-size: 0.8rem;\n`\n\nexport default () => (\n  <Footer>\n    Muhammad Fairuzi Teguh Â© 2018\n  </Footer>\n)\n","import styled from '@emotion/styled'\n\nexport const StretchContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const StretchedContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const Stretch = styled.div`\n  flex: 1;\n`\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport Navbar from '../components/navbar'\nimport Footer from '../components/footer'\nimport styled from '@emotion/styled'\nimport { Global, css } from '@emotion/core'\nimport {\n  StretchContainer,\n} from '../components/stretch'\n\nconst FullPage = styled.div`\n  min-height: 100vh;\n  height: 1px;\n`\n\nconst Layout = ({ children }) => (\n  <FullPage>\n    <Helmet\n      title='Fairuzi10'\n      meta={[\n        { name: 'google-site-verification', content: 'uu3IRN8Av5aq9r0lEKhIJjoLFIi1T8TFKymt0f-68bk' },\n      ]}\n    />\n    <Global styles={css`\n      @import url('https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css');\n      @import url('https://fonts.googleapis.com/css?family=Arvo');\n\n      * {\n        font-family: 'Arvo';\n      }\n\n      .black-link {\n        color: black!important;\n      }\n\n      .black-link:hover {\n        color: black!important;\n      }\n\n      .grey-link {\n        color: #777!important;\n      }\n\n      .grey-link:hover {\n        color: #777!important;\n      }\n\n      .img-caption {\n        // display: block;\n        margin-top: -1em;\n        text-align: center;\n        color: rgba(0,0,0,.5);\n        // font-style: normal;\n        margin-bottom: 1em;\n      }\n\n      .gatsby-resp-image-link {\n        margin-bottom: 1em;\n      }\n\n      blockquote {\n        background: #f8f9fa;\n        border-left: 0.3em solid #e5e5e5;\n        padding: 1em;\n      }\n\n      hr.section-divider {\n        margin: 3em 0;\n        border: 0;\n        text-align: center;\n      }\n\n      hr.section-divider:before {\n        content: '...';\n        font-size: 2em;\n        top: -1em;\n        position: relative;\n        letter-spacing: 1em;\n        margin-left: 1em;\n        color: rgb(33, 37, 41);\n      }\n\n      .blog-post p {\n        text-align: justify;\n      }\n    `} />\n    <StretchContainer>\n      <Navbar/>\n      { children }\n      <Footer/>\n    </StretchContainer>\n  </FullPage>\n)\n\nexport default Layout\n","import React from 'react'\nimport Layout from './layout.js'\nimport {\n  Row,\n  Col,\n  Container,\n} from 'reactstrap'\nimport {\n  Stretch,\n} from '../components/stretch'\n\n/**\n * Single means one page only contains 1 column.\n * Mid means one page only contains 1 column and should be positioned in the center\n */\nexport default ({ children, single, mid }) => {\n  if (mid) single = true;\n  const ColProps = single? { md: '10', lg: '9', xl: '8'}: {}\n  return (\n    <Layout>\n      <Stretch className={ mid? 'd-flex align-items-center text-center': '' }>\n        <Container>\n          <Row className='justify-content-center'>\n            <Col {...ColProps}>\n              { children }\n            </Col>\n          </Row>\n        </Container>\n      </Stretch>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}