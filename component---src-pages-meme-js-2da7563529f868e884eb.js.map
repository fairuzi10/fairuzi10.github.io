{"version":3,"sources":["webpack:///./src/pages/meme.js"],"names":["pageQuery","MemePage","_ref","images","array","counter","slice","length","index","Math","floor","random","temp","shuffle","data","allFile","edges","map","nodeObject","img","node","childImageSharp","fluid","path","relativePath","postUrl","indexOf","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","className","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","a","evenImages","filter","el","idx","oddImages","_components_wrapper_js__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","meta","name","content","_components_card__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"0NAiEaA,EAAS,YAiBPC,UA5DE,SAAAC,GAIX,IAEEC,EApBQ,SAAAC,GAId,IAFA,IAAIC,GADJD,EAAQA,EAAME,SACMC,OAEbF,EAAU,GAAG,CAClB,IAAMG,EAAQC,KAAKC,MAAMD,KAAKE,SAAWN,GAEnCO,EAAOR,IADbC,GAEAD,EAAMC,GAAWD,EAAMI,GACvBJ,EAAMI,GAASI,EAEjB,OAAOR,EAQOS,CADVX,EAHJY,KACEC,QAAWC,OAIQC,IAAI,SAAAC,GACvB,IAAMC,EAAMD,EAAWE,KAAKC,gBAAgBC,MACtCC,EAAOL,EAAWE,KAAKI,aACvBC,EAAU,SAAWF,EAAKjB,MAAM,EAAGiB,EAAKG,QAAQ,MAAQ,IAC9D,OACEC,OAAAC,EAAA,EAAAD,CAAA,OAAKE,UAAU,OAAOC,IAAKP,GACzBI,OAAAC,EAAA,EAAAD,CAACI,EAAA,KAAD,CAAMC,GAAIP,GACRE,OAAAC,EAAA,EAAAD,CAACM,EAAAC,EAAD,CAAKZ,MAAOH,QAKdgB,EAAahC,EAAOiC,OAAO,SAACC,EAAIC,GAAL,OAAaA,EAAM,GAAM,IACpDC,EAAYpC,EAAOiC,OAAO,SAACC,EAAIC,GAAL,OAAaA,EAAM,GAAM,IACzD,OACEX,OAAAC,EAAA,EAAAD,CAACa,EAAA,EAAD,KACEb,OAAAC,EAAA,EAAAD,CAACc,EAAAP,EAAD,CACEQ,KAAM,CACJ,CACEC,KAAM,cACNC,QAAS,4CAIfjB,OAAAC,EAAA,EAAAD,CAACkB,EAAA,EAAD,KACElB,OAAAC,EAAA,EAAAD,CAAA,MAAIE,UAAU,eAAd,+DAGAF,OAAAC,EAAA,EAAAD,CAAA,OAAKE,UAAU,8BACbF,OAAAC,EAAA,EAAAD,CAAA,OAAKE,UAAU,mBAAmBM,GAAkB,IACpDR,OAAAC,EAAA,EAAAD,CAAA,OAAKE,UAAU,mBAAmBU","file":"component---src-pages-meme-js-2da7563529f868e884eb.js","sourcesContent":["import Card from '@/components/card'\nimport { graphql, Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Wrapper from '../components/wrapper.js'\n\nconst shuffle = array => {\n  array = array.slice()\n  let counter = array.length\n\n  while (counter > 0) {\n    const index = Math.floor(Math.random() * counter)\n    counter--\n    const temp = array[counter]\n    array[counter] = array[index]\n    array[index] = temp\n  }\n  return array\n}\n\nconst MemePage = ({\n  data: {\n    allFile: { edges }\n  }\n}) => {\n  const memes = shuffle(edges)\n  const images = memes.map(nodeObject => {\n    const img = nodeObject.node.childImageSharp.fluid\n    const path = nodeObject.node.relativePath\n    const postUrl = '/blog/' + path.slice(0, path.indexOf('/')) + '/'\n    return (\n      <div className=\"py-4\" key={path}>\n        <Link to={postUrl}>\n          <Img fluid={img} />\n        </Link>\n      </div>\n    )\n  })\n  const evenImages = images.filter((el, idx) => idx % 2 === 0)\n  const oddImages = images.filter((el, idx) => idx % 2 === 1)\n  return (\n    <Wrapper>\n      <Helmet\n        meta={[\n          {\n            name: 'description',\n            content: 'Kumpulan meme yang ada pada blog ini.'\n          }\n        ]}\n      />\n      <Card>\n        <h5 className=\"text-center\">\n          Klik gambar untuk membaca pos dan mendapatkan konteksnya :)\n        </h5>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12 col-lg-6\">{evenImages}</div>{' '}\n          <div className=\"col-12 col-lg-6\">{oddImages}</div>\n        </div>\n      </Card>\n    </Wrapper>\n  )\n}\n\nexport const pageQuery = graphql`\n  {\n    allFile(filter: { absolutePath: { regex: \"/meme//\" } }) {\n      edges {\n        node {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n          relativePath\n        }\n      }\n    }\n  }\n`\n\nexport default MemePage\n"],"sourceRoot":""}