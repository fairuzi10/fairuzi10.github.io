{"version":3,"sources":["webpack:///./src/pages/blog/tag.js","webpack:///./src/utils/theme.js","webpack:///./src/components/navbar.js","webpack:///./src/components/footer.js","webpack:///./src/components/stretch.js","webpack:///./src/components/global-styes.js","webpack:///./src/components/layout.js","webpack:///./src/components/wrapper.js","webpack:///./src/components/card.js","webpack:///./src/utils/urls.js"],"names":["pageQuery","TagsPage","_ref","tagList","data","allMarkdownRemark","group","map","tag","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","key","fieldValue","gatsby_link__WEBPACK_IMPORTED_MODULE_4___default","a","to","blogTagUrl","totalCount","_components_wrapper__WEBPACK_IMPORTED_MODULE_2__","single","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","title","_components_card__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","d","__webpack_exports__","COLOR","primary","black","dark","blue","blueFade","white","yellow","gray","orange","NavbarWrapper","styled_base_browser_esm","target","name","styles","LinkNav","children","core_browser_esm","NavItem","gatsby_link_default","className","activeClassName","partiallyActive","Example","props","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","render","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","aria-label","Nav","navbar_LinkNav","React","Component","Footer","marginTop","borderTop","padding","textAlign","fontSize","backgroundColor","footer","StretchContainer","Stretch","css","FullPage","Layout","useEffect","loadingStyle","document","getElementById","loadingBody","remove","Helmet_default","htmlAttributes","lang","meta","content","globalStyles","navbar_Example","mid","ColProps","md","lg","xl","layout","Container","Row","Col","Card","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","margin","borderRadius","boxShadow","blogUrl","blogListUrl","projectUrl","subpath","page"],"mappings":"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","file":"component---src-pages-blog-tag-js-9bfb6b978b06c3af8c31.js","sourcesContent":["import Card from '@/components/card'\nimport Wrapper from '@/components/wrapper'\nimport { blogTagUrl } from '@/utils/urls'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nconst TagsPage = ({\n  data: {\n    allMarkdownRemark: { group }\n  }\n}) => {\n  const tagList = group.map(tag => (\n    <h6 key={tag.fieldValue}>\n      <Link to={blogTagUrl(tag.fieldValue)}>\n        {`${tag.fieldValue} (${tag.totalCount})`}\n      </Link>\n    </h6>\n  ))\n\n  return (\n    <Wrapper single>\n      <Helmet title=\"label\" />\n      <Card>\n        <h2>Daftar Label</h2>\n      </Card>\n      <Card>{tagList}</Card>\n    </Wrapper>\n  )\n}\n\nexport const pageQuery = graphql`\n  query TagsQuery {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\nexport default TagsPage\n","export const COLOR = {\n  primary: '#007bff',\n  black: '#000000',\n  dark: '#263646',\n  blue: '#1B1464',\n  blueFade: '#e6ecf0',\n  white: '#ffffff',\n  yellow: '#f1c40f',\n  gray: '#34495e',\n  orange: '#F79F1F'\n}\n","import styled from '@emotion/styled'\nimport Link from 'gatsby-link'\nimport React from 'react'\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem\n} from 'reactstrap'\n\nconst NavbarWrapper = styled.div({\n  marginBottom: '3rem',\n  boxShadow: '0px 10px 20px -10px rgba(0,64,128,0.2)'\n})\n\nconst LinkNav = ({ to, children }) => (\n  <NavItem>\n    <Link className=\"nav-link\" to={to} activeClassName=\"active\" partiallyActive>\n      {children}\n    </Link>\n  </NavItem>\n)\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n  render() {\n    return (\n      <NavbarWrapper>\n        <Navbar color=\"white\" light expand=\"md\" className=\"py-3\">\n          <NavbarBrand href=\"/\">Fairuzi10</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            aria-label=\"Toggle navbar\"\n          >\n            <Nav className=\"ml-auto\" navbar>\n              <LinkNav to=\"/blog/\">Blog</LinkNav>\n              <LinkNav to=\"/project/\">Project</LinkNav>\n              <LinkNav to=\"/meme/\">Meme</LinkNav>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </NavbarWrapper>\n    )\n  }\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { COLOR } from '@/utils/theme'\n\nconst Footer = styled.footer({\n  marginTop: '1rem',\n  borderTop: '1px solid #e5e5e5',\n  padding: '3rem 0',\n  textAlign: 'center',\n  color: COLOR.dark,\n  fontSize: '0.8rem',\n  backgroundColor: COLOR.white\n})\n\nexport default () => <Footer>Muhammad Fairuzi Teguh Â© 2019</Footer>\n","import styled from '@emotion/styled'\n\nexport const StretchContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const StretchedContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const Stretch = styled.div`\n  flex: 1;\n`\n","import { css } from '@emotion/core'\nimport { COLOR } from '@/utils/theme'\n\nexport default css`\n  @import url('https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css');\n  @import url('https://fonts.googleapis.com/css?family=Arvo&display=swap');\n\n  * {\n    font-family: 'Arvo';\n  }\n\n  body {\n    background-color: ${COLOR.blueFade};\n  }\n\n  .black-link {\n    color: ${COLOR.dark} !important;\n  }\n\n  .black-link:hover {\n    color: ${COLOR.dark} !important;\n  }\n\n  .grey-link {\n    color: #777 !important;\n  }\n\n  .grey-link:hover {\n    color: #777 !important;\n  }\n\n  .img-caption {\n    margin-top: -1em;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.5);\n    margin-bottom: 1em;\n  }\n\n  .gatsby-resp-image-link {\n    margin-bottom: 1em;\n  }\n\n  blockquote {\n    background: #f8f9fa;\n    border-left: 0.3em solid #e5e5e5;\n    padding: 1em;\n  }\n\n  hr.section-divider {\n    margin: 3em 0;\n    border: 0;\n    text-align: center;\n  }\n\n  hr.section-divider:before {\n    content: '...';\n    font-size: 2em;\n    top: -1em;\n    position: relative;\n    letter-spacing: 1em;\n    margin-left: 1em;\n    color: rgb(33, 37, 41);\n  }\n\n  .blog-post p {\n    text-align: justify;\n  }\n`\n","import React, { useEffect } from 'react'\nimport Helmet from 'react-helmet'\nimport Navbar from '../components/navbar'\nimport Footer from '../components/footer'\nimport styled from '@emotion/styled'\nimport { Global } from '@emotion/core'\nimport { StretchContainer } from '../components/stretch'\nimport globalStyles from './global-styes'\n\nconst FullPage = styled.div({\n  minHeight: '100vh',\n  height: '1px'\n})\n\nconst Layout = ({ children }) => {\n  useEffect(() => {\n    const loadingStyle = document.getElementById('loading-style')\n    const loadingBody = document.getElementById('loading-body')\n    if (loadingStyle) loadingStyle.remove()\n    if (loadingBody) loadingBody.remove()\n  }, [])\n  return (\n    <FullPage>\n      <Helmet\n        title=\"Fairuzi10\"\n        htmlAttributes={{\n          lang: 'id'\n        }}\n        meta={[\n          {\n            name: 'google-site-verification',\n            content: 'uu3IRN8Av5aq9r0lEKhIJjoLFIi1T8TFKymt0f-68bk'\n          }\n        ]}\n      />\n      <Global styles={globalStyles} />\n      <StretchContainer>\n        <Navbar />\n        {children}\n        <Footer />\n      </StretchContainer>\n    </FullPage>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport Layout from './layout.js'\nimport { Row, Col, Container } from 'reactstrap'\nimport { Stretch } from '../components/stretch'\n\n/**\n * Single means one page only contains 1 column.\n * Mid means one page only contains 1 column and should be positioned in the center\n */\nexport default ({ children, single, mid }) => {\n  if (mid) single = true\n  const ColProps = single ? { md: '10', lg: '9', xl: '8' } : {}\n  return (\n    <Layout>\n      <Stretch className={mid ? 'd-flex align-items-center text-center' : ''}>\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col {...ColProps}>{children}</Col>\n          </Row>\n        </Container>\n      </Stretch>\n    </Layout>\n  )\n}\n","import styled from '@emotion/styled'\nimport { COLOR } from '@/utils/theme'\n\nexport const Card = styled.div({\n  backgroundColor: COLOR.white,\n  padding: '2rem',\n  margin: '1rem',\n  borderRadius: '0.5rem',\n  boxShadow: '0px 10px 40px -10px rgba(0,64,128,0.2)'\n})\n\nexport default Card\n","export const blogUrl = subpath => '/blog/' + subpath + '/'\nexport const blogListUrl = page => '/blog/' + (page === 1 ? '' : page + '/')\nexport const blogTagUrl = tag => '/blog/tag/' + tag + '/'\nexport const projectUrl = subpath => '/project/' + subpath + '/'\n"],"sourceRoot":""}