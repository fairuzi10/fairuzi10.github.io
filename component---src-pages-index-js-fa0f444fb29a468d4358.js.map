{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Pagination.js","webpack:///./node_modules/reactstrap/es/PaginationItem.js","webpack:///./src/components/pagination.js","webpack:///./src/components/button.js","webpack:///./src/pages/index.js","webpack:///./src/utils/urls.js","webpack:///./src/components/HoverableImage.js","webpack:///./src/templates/blog-list.js","webpack:///./src/components/dark-link.js","webpack:///./src/components/section-divider.js"],"names":["propTypes","children","node","className","string","listClassName","cssModule","object","size","tag","listTag","props","_classNames","Tag","ListTag","label","attributes","classes","listClasses","createElement","defaultProps","active","bool","disabled","index","pageCount","page","i","Math","max","min","push","to","map","val","key","Button","backgroundImage","COLOR","gradGreenBlue","padding","border","borderRadius","cursor","color","dark","transition","outline","opacity","block","display","width","fontWeight","Post","frontmatter","date","title","description","tagsText","tags","blogTagUrl","id","timeToRead","fields","slug","query","postList","data","allMarkdownRemark","edges","blogListUrl","blogUrl","subpath","StyledImage","Img","HoverableImage","Title","Link","thumbnail","childImageSharp","fluid","IndexPage","pageContext","single","name","content","DarkGatsbyLink","textDecoration","DarkA","DarkLink","otherProps","href","SectionDivider"],"mappings":"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","file":"component---src-pages-index-js-fa0f444fb29a468d4358.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  tag: tagPropType,\n  listTag: tagPropType,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ul',\n  'aria-label': 'pagination'\n};\n\nvar Pagination = function Pagination(props) {\n  var _classNames;\n\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      size = props.size,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"size\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames(listClassName, 'pagination', (_classNames = {}, _classNames[\"pagination-\" + size] = !!size, _classNames)), cssModule);\n  return React.createElement(Tag, {\n    className: classes,\n    \"aria-label\": label\n  }, React.createElement(ListTag, _extends({}, attributes, {\n    className: listClasses\n  })));\n};\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default Pagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  disabled: PropTypes.bool,\n  tag: tagPropType\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar PaginationItem = function PaginationItem(props) {\n  var active = props.active,\n      className = props.className,\n      cssModule = props.cssModule,\n      disabled = props.disabled,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"cssModule\", \"disabled\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'page-item', {\n    active: active,\n    disabled: disabled\n  }), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nPaginationItem.propTypes = propTypes;\nPaginationItem.defaultProps = defaultProps;\nexport default PaginationItem;","import React from 'react'\nimport Link from 'gatsby-link'\nimport {\n  Pagination,\n  PaginationItem,\n} from 'reactstrap'\n\nexport default ({ index, pageCount }) => {\n  let page = []\n  for (var i = Math.max(1, index-2); i <= Math.min(index+2, pageCount); i++) page.push(i)\n  return (\n    <Pagination>\n      <PaginationItem disabled={ index === 1 }>\n        <Link to={`/blog${index-1 > 1? '/'+(index-1): ''}`} className=\"page-link\">«</Link>\n      </PaginationItem>\n      {page.map((val) => (\n        <PaginationItem key={val} disabled={val === index}>\n          <Link to={`/blog${val > 1? '/'+val: ''}`} className=\"page-link\">\n            {val}\n          </Link>\n        </PaginationItem>\n      ))}\n      <PaginationItem disabled={ index === pageCount }>\n        <Link to={`/blog/${index+1}`} className=\"page-link\">»</Link>\n      </PaginationItem>\n    </Pagination>\n  )\n}\n","import styled from '@emotion/styled'\nimport { COLOR } from '../styles/theme'\n\nexport const Button = styled.button(\n  {\n    backgroundImage: COLOR.gradGreenBlue,\n    padding: '0.5rem 1rem',\n    border: 0,\n    borderRadius: '2rem',\n    cursor: 'pointer',\n    color: COLOR.dark,\n    transition: 'all 0.15s ease-in-out',\n\n    '&:hover, &:focus': {\n      outline: 0\n    },\n    '&:hover': {\n      backgroundImage: COLOR.gradGreenBlue,\n      opacity: 0.9\n    }\n  },\n  ({ block }) =>\n    block && {\n      display: 'block',\n      width: '100%'\n    },\n  ({ size }) => {\n    switch (size) {\n      case 'lg':\n        return {\n          padding: '0.75rem 1rem',\n          fontWeight: 'bold'\n        }\n      default:\n        return {}\n    }\n  }\n)\n\nexport default Button\n","import Button from '@/components/button'\nimport DarkLink from '@/components/dark-link'\nimport SectionDivider from '@/components/section-divider'\nimport Wrapper from '@/components/wrapper'\nimport { blogListUrl } from '@/utils/urls.js'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\nimport React from 'react'\nimport { Card } from '../components/card'\nimport { blogTagUrl } from '../utils/urls.js'\nimport { Title } from '../templates/blog-list'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst Post = ({ node }) => {\n  const { date, title, description, tags } = node.frontmatter\n  const tagsText = tags.map(tag => (\n    <Link to={blogTagUrl(tag)} key={tag} className=\"mx-1\">\n      #{tag}{' '}\n    </Link>\n  ))\n\n  return (\n    <div key={node.id}>\n      <div>\n        {date} · {`${node.timeToRead} min read`}\n      </div>\n      <div>\n        <Title to={node.fields.slug}>{title}</Title>\n      </div>\n      <div className=\"mb-2\">{description}</div>\n      {tagsText}\n      <SectionDivider />\n    </div>\n  )\n}\n\nexport default ({ data }) => {\n  const postEdges = data.allMarkdownRemark.edges\n  const postList = postEdges.map(({ node }) => (\n    <Post node={node} key={node.fields.slug} />\n  ))\n\n  return (\n    <Wrapper>\n      <div className=\"row no-gutters\">\n        <div className=\"col-12 col-md-8 offset-md-2\">\n          <Card className=\"my-3 mx-0 mx-lg-3\">\n            <h1 className=\"text-center\">Fairuzi10</h1>\n            <h6 className=\"text-center\">\n              <i>I explain with words and memes</i>\n            </h6>\n          </Card>\n          <div className=\"py-3 px-lg-3\">\n            <Card>\n              <h4 className=\"text-center\">\n                <DarkLink to=\"/blog/\">Latest Blog</DarkLink>\n              </h4>\n              <SectionDivider />\n              {postList}\n              <div className=\"d-flex justify-content-center\">\n                <div className=\"col-12 col-md-8\">\n                  <Link\n                    to={blogListUrl(1)}\n                    className=\"text-decoration-none d-block\"\n                  >\n                    <Button block size=\"lg\">\n                      Lihat Selengkapnya\n                    </Button>\n                  </Link>\n                </div>\n              </div>\n            </Card>\n          </div>\n        </div>{' '}\n      </div>\n    </Wrapper>\n  )\n}\n\nexport const query = graphql`\n  query blogHomepageQuery {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 3\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            tags\n            description\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","export const blogUrl = subpath => `${subpath}`\nexport const blogListUrl = page => `/blog/${page === 1 ? '' : `${page}/`}`\nexport const blogTagUrl = tag => `/blog/tag/${tag}/`\nexport const projectUrl = subpath => {\n  switch (subpath) {\n    case 'jadwal-siak-war':\n      return 'https://jadwal-siak-war.fairuzi10.com'\n    default:\n      return `/project/${subpath}/`\n  }\n}\n","import React from 'react'\nimport Img from 'gatsby-image'\nimport styled from '@emotion/styled'\n\nconst StyledImage = styled(Img)({\n  transition: 'transform .15s',\n  '&:hover': {\n    transform: 'scale(1.1)'\n  }\n})\n\nexport const HoverableImage = props => {\n  return (\n    <div className=\"m-3\">\n      <StyledImage {...props} />\n    </div>\n  )\n}\n","import Card from '@/components/card'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nimport { HoverableImage } from '../components/HoverableImage'\nimport Pagination from '../components/pagination'\nimport Wrapper from '../components/wrapper'\nimport { COLOR } from '../styles/theme'\nimport { blogTagUrl, blogUrl } from '../utils/urls'\nimport styled from '@emotion/styled'\n\nexport const Title = styled(Link)`\n  font-size: 1.5rem;\n  font-weight: bold;\n  display: inline-block;\n  padding: 8px 16px 8px 64px;\n  border-radius: 16px;\n  margin-left: -64px;\n  margin-top: 8px;\n  margin-bottom: 16px;\n  background: ${COLOR.gradGreenBlue};\n  color: ${COLOR.dark};\n  &:hover {\n    opacity: 0.9;\n    text-decoration: none;\n    color: ${COLOR.dark};\n  }\n`\n\nexport const Post = ({ node }) => {\n  const { date, title, description, tags } = node.frontmatter\n  const tagsText = tags.map(tag => (\n    <Link to={blogTagUrl(tag)} key={tag} className=\"mx-1\">\n      #{tag}{' '}\n    </Link>\n  ))\n  const thumbnail = node.frontmatter.thumbnail\n    ? node.frontmatter.thumbnail.childImageSharp.fluid\n    : ''\n\n  return (\n    <div key={node.id}>\n      <div>\n        {date} · {`${node.timeToRead} min read`}\n      </div>\n      <div>\n        <Title to={blogUrl(node.fields.slug)}>{title}</Title>\n      </div>\n      {thumbnail && (\n        <div className=\"text-center row\">\n          <div className=\"col-12 col-md-8 offset-md-2\">\n            <Link to={blogUrl(node.fields.slug)}>\n              <HoverableImage fluid={thumbnail} />\n            </Link>\n          </div>\n        </div>\n      )}\n      <div>{description}</div>\n      {tagsText}\n      <hr className=\"my-4\" />\n    </div>\n  )\n}\n\nconst IndexPage = ({ data, pageContext }) => {\n  const edges = data.allMarkdownRemark.edges\n  const postList = edges.map(({ node }) => (\n    <Post node={node} key={node.fields.slug} />\n  ))\n  const { page, pageCount } = pageContext\n\n  return (\n    <Wrapper single>\n      <Helmet>\n        <title>Blog</title>\n        <meta name=\"og:title\" content=\"Blog\" />\n        <meta\n          name=\"description\"\n          content=\"Kumpulan cerita tentang olimpiade komputer, Universitas Indonesia, dan Software Engineering\"\n        />\n        <meta\n          name=\"og:description\"\n          content=\"Kumpulan cerita tentang olimpiade komputer, Universitas Indonesia, dan Software Engineering\"\n        />\n      </Helmet>\n      <Card>{postList}</Card>\n      <div className=\"d-flex justify-content-center mt-4\">\n        <Pagination index={page} pageCount={pageCount} />\n      </div>\n    </Wrapper>\n  )\n}\n\nexport const query = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid(quality: 90) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { COLOR } from '../styles/theme'\nimport { Link } from 'gatsby'\n\nconst DarkGatsbyLink = styled(Link)({\n  color: COLOR.dark,\n  ':hover': {\n    color: COLOR.dark,\n    textDecoration: 'underline'\n  }\n})\n\nconst DarkA = styled.a({\n  color: COLOR.dark,\n  ':hover': {\n    color: COLOR.dark,\n    textDecoration: 'underline'\n  }\n})\n\nexport const DarkLink = ({ to, ...otherProps }) => {\n  switch (to[0]) {\n    case '/':\n      return <DarkGatsbyLink to={to} {...otherProps} />\n    default:\n      return <DarkA href={to} {...otherProps} />\n  }\n}\n\nexport default DarkLink\n","import styled from '@emotion/styled'\n\nexport const SectionDivider = styled.hr({\n  margin: '1rem 0'\n})\n\nexport default SectionDivider\n"],"sourceRoot":""}