{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Post","_ref","node","_node$frontmatter","frontmatter","date","title","description","tagsText","tags","map","tag","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","to","key","className","id","_components_utils_js__WEBPACK_IMPORTED_MODULE_7__","fields","slug","__webpack_exports__","_ref2","data","postList","allMarkdownRemark","edges","_ref3","memeList","allFile","_ref4","img","childImageSharp","fluid","path","relativePath","postUrl","slice","indexOf","reactstrap__WEBPACK_IMPORTED_MODULE_5__","xs","md","gatsby_image__WEBPACK_IMPORTED_MODULE_1___default","memeSection","reactstrap__WEBPACK_IMPORTED_MODULE_6__","_components_wrapper_js__WEBPACK_IMPORTED_MODULE_8__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","meta","name","content","lg","query"],"mappings":"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","file":"component---src-pages-index-js-47f9c5128b40d5565d36.js","sourcesContent":["import { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport Link from 'gatsby-link';\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { Col, Row } from 'reactstrap';\n\nimport { BlackLink, Card } from '../components/utils.js';\nimport Wrapper from '../components/wrapper.js';\n\nconst Post = ({ node }) => {\n  const { date, title, description, tags } = node.frontmatter\n  const tagsText = tags.map(tag => (\n    <Link to={`/blog/tag/${tag}/`} key={tag} className='mx-1'>#{tag} </Link>\n  ))\n\n  return (\n    <div key={node.id}>\n      <div>{date}</div>\n      <h4>\n        <BlackLink to={ `/blog${node.fields.slug}` }>\n          {title}\n        </BlackLink>\n      </h4>\n      <div><small>{ description }</small></div>\n      {tagsText}\n      <hr className=\"my-4\"/>\n    </div>\n  )\n}\n\nexport default ({ data }) => {\n  const postEdges = data.allMarkdownRemark.edges\n  const postList = postEdges.map(({ node }) => <Post node={node} key={node.fields.slug}/>);\n\n  const memeEdges = data.allFile.edges\n  const memeList = memeEdges.map(({ node }) => {\n    const img = node.childImageSharp.fluid\n    const path = node.relativePath\n    const postUrl = '/blog/' + path.slice(0, path.indexOf('/')) + '/'\n    return (\n      <Col xs='9' md='4' key={path}>\n        <Link to={postUrl}>\n          <Img fluid={img} className='m-2'></Img>\n        </Link>\n      </Col>\n    )\n  })\n  const memeSection = (\n    <Card>\n      <BlackLink to='/meme/'><h4 className='text-center'>Fresh Memes</h4></BlackLink>\n      <Row className=\"justify-content-center\">\n        {memeList}\n      </Row>\n    </Card>\n  )\n\n  return (\n    <Wrapper>\n      <Helmet\n        meta={[\n          { name: 'description', content: 'Website pribadi Muhammad Fairuzi Teguh, berisikan cerita-cerita\\\n  mengenai hidup seperti kehidupan perkuliahan di Universitas Indonesia (UI) serta Olimpiade Sains Nasional (OSN) Komputer/Informatika.' },\n        ]}\n      />\n      <Card>\n        <h1 className=\"text-center\">Selamat Datang di Website Fairuzi10</h1>\n        <hr/>\n      </Card>\n      <Row>\n        <Col xs=\"12\" lg=\"7\">\n          <Card>\n            <BlackLink to='/blog/'><h4 className='text-center'>Latest Blogs</h4></BlackLink>\n            { postList }\n          </Card>\n        </Col>\n        <Col xs=\"12\" lg=\"5\">\n          <Card>\n            <BlackLink to='/project/'>\n              <h4 className=\"text-center\">Cool Projects</h4>\n            </BlackLink>\n          </Card>\n        </Col>\n        <Col xs=\"12\">\n          {memeSection}\n        </Col>\n      </Row>\n    </Wrapper>\n  )\n}\n\nexport const query = graphql`\nquery blogHomepageQuery {\n  allMarkdownRemark(\n    sort: { fields: [frontmatter___date], order: DESC }\n    limit: 3\n  ) {\n    edges {\n      node {\n        frontmatter {\n          title\n          date(formatString: \"DD MMMM YYYY\")\n          tags\n          description\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n  allFile(\n    filter:{absolutePath:{regex:\"/meme\\//\"}},\n    sort: {order: DESC, fields: birthTime},\n    limit: 3) {\n    edges {\n      node {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n        relativePath\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}