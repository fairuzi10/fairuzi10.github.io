{"version":3,"sources":["webpack:///component---src-templates-blog-post-js-79bf737ab93f0684e1af.js","webpack:///./~/react-disqus-thread/lib/components/DisqusThread.js","webpack:///./~/react-disqus-thread/lib/main.js","webpack:///./src/components/reg.js?1d17","webpack:///./src/templates/blog-post.js"],"names":["webpackJsonp","339","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","copyProps","context","props","prefix","arguments","length","undefined","Object","keys","forEach","prop","onNewComment","this","callbacks","comment","_react","_react2","DISQUS_CONFIG","__disqusAdded","createClass","displayName","propTypes","id","PropTypes","string","shortname","isRequired","identifier","title","url","category_id","func","getDefaultProps","componentDidMount","loadDisqus","componentDidUpdate","render","createElement","href","className","addDisqusScript","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this","window","location","DISQUS","reset","reload","config","page","replace","340","74","_reactstrap","_stretch","_ref","children","Stretch","Col","md","lg","Container","207","query","_reg","_reg2","_reactDisqusThread","_reactDisqusThread2","data","post","markdownRemark","frontmatter","dangerouslySetInnerHTML","__html","html","date","fields","slug"],"mappings":"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","file":"component---src-templates-blog-post-js-79bf737ab93f0684e1af.js","sourcesContent":["webpackJsonp([107818501498521],{\n\n/***/ 339:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment'];\n\tvar __disqusAdded = false;\n\t\n\tfunction copyProps(context, props) {\n\t  var prefix = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];\n\t\n\t  Object.keys(props).forEach(function (prop) {\n\t    context[prefix + prop] = props[prop];\n\t  });\n\t\n\t  if (typeof props.onNewComment === 'function') {\n\t    context[prefix + 'config'] = function config() {\n\t      this.callbacks.onNewComment = [function handleNewComment(comment) {\n\t        props.onNewComment(comment);\n\t      }];\n\t    };\n\t  }\n\t}\n\t\n\tmodule.exports = _react2['default'].createClass({\n\t  displayName: 'DisqusThread',\n\t\n\t  propTypes: {\n\t    id: _react2['default'].PropTypes.string,\n\t\n\t    /**\n\t     * `shortname` tells the Disqus service your forum's shortname,\n\t     * which is the unique identifier for your website as registered\n\t     * on Disqus. If undefined , the Disqus embed will not load.\n\t     */\n\t    shortname: _react2['default'].PropTypes.string.isRequired,\n\t\n\t    /**\n\t     * `identifier` tells the Disqus service how to identify the\n\t     * current page. When the Disqus embed is loaded, the identifier\n\t     * is used to look up the correct thread. If disqus_identifier\n\t     * is undefined, the page's URL will be used. The URL can be\n\t     * unreliable, such as when renaming an article slug or changing\n\t     * domains, so we recommend using your own unique way of\n\t     * identifying a thread.\n\t     */\n\t    identifier: _react2['default'].PropTypes.string,\n\t\n\t    /**\n\t     * `title` tells the Disqus service the title of the current page.\n\t     * This is used when creating the thread on Disqus for the first time.\n\t     * If undefined, Disqus will use the <title> attribute of the page.\n\t     * If that attribute could not be used, Disqus will use the URL of the page.\n\t     */\n\t    title: _react2['default'].PropTypes.string,\n\t\n\t    /**\n\t     * `url` tells the Disqus service the URL of the current page.\n\t     * If undefined, Disqus will take the window.location.href.\n\t     * This URL is used to look up or create a thread if disqus_identifier\n\t     * is undefined. In addition, this URL is always saved when a thread is\n\t     * being created so that Disqus knows what page a thread belongs to.\n\t     */\n\t    url: _react2['default'].PropTypes.string,\n\t\n\t    /**\n\t     * `category_id` tells the Disqus service the category to be used for\n\t     * the current page. This is used when creating the thread on Disqus\n\t     * for the first time.\n\t     */\n\t    category_id: _react2['default'].PropTypes.string,\n\t\n\t    /**\n\t     * `onNewComment` function accepts one parameter `comment` which is a\n\t     * JavaScript object with comment `id` and `text`. This allows you to track\n\t     * user comments and replies and run a script after a comment is posted.\n\t     */\n\t    onNewComment: _react2['default'].PropTypes.func\n\t  },\n\t\n\t  getDefaultProps: function getDefaultProps() {\n\t    return {\n\t      shortname: null,\n\t      identifier: null,\n\t      title: null,\n\t      url: null,\n\t      category_id: null,\n\t      onNewComment: null\n\t    };\n\t  },\n\t\n\t  componentDidMount: function componentDidMount() {\n\t    this.loadDisqus();\n\t  },\n\t\n\t  componentDidUpdate: function componentDidUpdate() {\n\t    this.loadDisqus();\n\t  },\n\t\n\t  render: function render() {\n\t    return _react2['default'].createElement(\n\t      'div',\n\t      this.props,\n\t      _react2['default'].createElement('div', { id: 'disqus_thread' }),\n\t      _react2['default'].createElement(\n\t        'noscript',\n\t        null,\n\t        _react2['default'].createElement(\n\t          'span',\n\t          null,\n\t          'Please enable JavaScript to view the',\n\t          _react2['default'].createElement(\n\t            'a',\n\t            { href: 'http://disqus.com/?ref_noscript' },\n\t            'comments powered by Disqus.'\n\t          )\n\t        )\n\t      ),\n\t      _react2['default'].createElement(\n\t        'a',\n\t        { href: 'http://disqus.com', className: 'dsq-brlink' },\n\t        'Blog comments powered by ',\n\t        _react2['default'].createElement(\n\t          'span',\n\t          { className: 'logo-disqus' },\n\t          'Disqus'\n\t        ),\n\t        '.'\n\t      )\n\t    );\n\t  },\n\t\n\t  addDisqusScript: function addDisqusScript() {\n\t    if (__disqusAdded) {\n\t      return;\n\t    }\n\t\n\t    var child = this.disqus = document.createElement('script');\n\t    var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\t\n\t    child.async = true;\n\t    child.type = 'text/javascript';\n\t    child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\t\n\t    parent.appendChild(child);\n\t    __disqusAdded = true;\n\t  },\n\t\n\t  loadDisqus: function loadDisqus() {\n\t    var _this = this;\n\t\n\t    var props = {};\n\t\n\t    // Extract Disqus props that were supplied to this component\n\t    DISQUS_CONFIG.forEach(function (prop) {\n\t      if (!!_this.props[prop]) {\n\t        props[prop] = _this.props[prop];\n\t      }\n\t    });\n\t\n\t    // Always set URL\n\t    if (!props.url || !props.url.length) {\n\t      props.url = window.location.href;\n\t    }\n\t\n\t    // If Disqus has already been added, reset it\n\t    if (typeof DISQUS !== 'undefined') {\n\t      DISQUS.reset({\n\t        reload: true,\n\t        config: function config() {\n\t          copyProps(this.page, props);\n\t\n\t          // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n\t          this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n\t        }\n\t      });\n\t    } else {\n\t      // Otherwise add Disqus to the page\n\t      copyProps(window, props, 'disqus_');\n\t      this.addDisqusScript();\n\t    }\n\t  }\n\t});\n\n/***/ }),\n\n/***/ 340:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tmodule.exports = __webpack_require__(339);\n\n/***/ }),\n\n/***/ 74:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactstrap = __webpack_require__(20);\n\t\n\tvar _stretch = __webpack_require__(24);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (_ref) {\n\t  var children = _ref.children;\n\t  return _react2.default.createElement(\n\t    _stretch.Stretch,\n\t    { className: 'd-flex justify-content-center' },\n\t    _react2.default.createElement(\n\t      _reactstrap.Col,\n\t      { md: '10', lg: '8' },\n\t      _react2.default.createElement(\n\t        _reactstrap.Container,\n\t        null,\n\t        children\n\t      )\n\t    )\n\t  );\n\t};\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.query = undefined;\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reg = __webpack_require__(74);\n\t\n\tvar _reg2 = _interopRequireDefault(_reg);\n\t\n\tvar _reactDisqusThread = __webpack_require__(340);\n\t\n\tvar _reactDisqusThread2 = _interopRequireDefault(_reactDisqusThread);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (_ref) {\n\t  var data = _ref.data;\n\t\n\t  var post = data.markdownRemark;\n\t  return _react2.default.createElement(\n\t    _reg2.default,\n\t    null,\n\t    _react2.default.createElement(\n\t      'h1',\n\t      null,\n\t      post.frontmatter.title\n\t    ),\n\t    _react2.default.createElement('div', { dangerouslySetInnerHTML: { __html: post.html } }),\n\t    _react2.default.createElement('hr', null),\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: 'my-3' },\n\t      'Posted on ',\n\t      post.frontmatter.date\n\t    ),\n\t    _react2.default.createElement('hr', null),\n\t    _react2.default.createElement(_reactDisqusThread2.default, {\n\t      identifier: post.fields.slug,\n\t      url: 'fairuzi10.github.io/blog/{ post.fields.slug }'\n\t    })\n\t  );\n\t};\n\t\n\tvar query = exports.query = '** extracted graphql fragment **';\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-blog-post-js-79bf737ab93f0684e1af.js","'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n  var prefix = arguments.length <= 2 || arguments[2] === undefined ? '' : arguments[2];\n\n  Object.keys(props).forEach(function (prop) {\n    context[prefix + prop] = props[prop];\n  });\n\n  if (typeof props.onNewComment === 'function') {\n    context[prefix + 'config'] = function config() {\n      this.callbacks.onNewComment = [function handleNewComment(comment) {\n        props.onNewComment(comment);\n      }];\n    };\n  }\n}\n\nmodule.exports = _react2['default'].createClass({\n  displayName: 'DisqusThread',\n\n  propTypes: {\n    id: _react2['default'].PropTypes.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _react2['default'].PropTypes.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _react2['default'].PropTypes.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _react2['default'].PropTypes.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _react2['default'].PropTypes.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _react2['default'].PropTypes.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _react2['default'].PropTypes.func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      shortname: null,\n      identifier: null,\n      title: null,\n      url: null,\n      category_id: null,\n      onNewComment: null\n    };\n  },\n\n  componentDidMount: function componentDidMount() {\n    this.loadDisqus();\n  },\n\n  componentDidUpdate: function componentDidUpdate() {\n    this.loadDisqus();\n  },\n\n  render: function render() {\n    return _react2['default'].createElement(\n      'div',\n      this.props,\n      _react2['default'].createElement('div', { id: 'disqus_thread' }),\n      _react2['default'].createElement(\n        'noscript',\n        null,\n        _react2['default'].createElement(\n          'span',\n          null,\n          'Please enable JavaScript to view the',\n          _react2['default'].createElement(\n            'a',\n            { href: 'http://disqus.com/?ref_noscript' },\n            'comments powered by Disqus.'\n          )\n        )\n      ),\n      _react2['default'].createElement(\n        'a',\n        { href: 'http://disqus.com', className: 'dsq-brlink' },\n        'Blog comments powered by ',\n        _react2['default'].createElement(\n          'span',\n          { className: 'logo-disqus' },\n          'Disqus'\n        ),\n        '.'\n      )\n    );\n  },\n\n  addDisqusScript: function addDisqusScript() {\n    if (__disqusAdded) {\n      return;\n    }\n\n    var child = this.disqus = document.createElement('script');\n    var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n    child.async = true;\n    child.type = 'text/javascript';\n    child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n    parent.appendChild(child);\n    __disqusAdded = true;\n  },\n\n  loadDisqus: function loadDisqus() {\n    var _this = this;\n\n    var props = {};\n\n    // Extract Disqus props that were supplied to this component\n    DISQUS_CONFIG.forEach(function (prop) {\n      if (!!_this.props[prop]) {\n        props[prop] = _this.props[prop];\n      }\n    });\n\n    // Always set URL\n    if (!props.url || !props.url.length) {\n      props.url = window.location.href;\n    }\n\n    // If Disqus has already been added, reset it\n    if (typeof DISQUS !== 'undefined') {\n      DISQUS.reset({\n        reload: true,\n        config: function config() {\n          copyProps(this.page, props);\n\n          // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n          this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n        }\n      });\n    } else {\n      // Otherwise add Disqus to the page\n      copyProps(window, props, 'disqus_');\n      this.addDisqusScript();\n    }\n  }\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-disqus-thread/lib/components/DisqusThread.js\n// module id = 339\n// module chunks = 107818501498521","'use strict';\n\nmodule.exports = require('./components/DisqusThread');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-disqus-thread/lib/main.js\n// module id = 340\n// module chunks = 107818501498521","import React from 'react'\nimport {\n  Col,\n  Container,\n} from 'reactstrap'\nimport {\n  Stretch,\n} from '../components/stretch'\n\nexport default ({ children }) => (\n  <Stretch className='d-flex justify-content-center'>\n    <Col md=\"10\" lg=\"8\">\n      <Container>\n        { children }\n      </Container>\n    </Col>\n  </Stretch>\n)\n\n\n// WEBPACK FOOTER //\n// ./src/components/reg.js","import React from 'react';\nimport Reg from '../components/reg'\nimport Comment from 'react-disqus-thread'\n\nexport default ({ data }) => {\n  const post = data.markdownRemark;\n  return (\n    <Reg>\n      <h1>{post.frontmatter.title}</h1>\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      <hr />\n      <div className=\"my-3\">\n        Posted on { post.frontmatter.date }\n      </div>\n      <hr />\n      <Comment\n        identifier={ post.fields.slug }\n        url=\"fairuzi10.github.io/blog/{ post.fields.slug }\"\n      />\n    </Reg>\n  );\n};\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM, YYYY\")\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n\n\n// WEBPACK FOOTER //\n// ./src/templates/blog-post.js"],"sourceRoot":""}