{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/utils/theme.js","webpack:///./src/components/navbar.js","webpack:///./src/components/footer.js","webpack:///./src/components/stretch.js","webpack:///./src/components/global-styes.js","webpack:///./src/components/layout.js","webpack:///./src/components/wrapper.js","webpack:///./src/components/card.js","webpack:///./src/utils/urls.js","webpack:///./src/components/dark-link.js","webpack:///./src/components/section-divider.js"],"names":["__webpack_exports__","_ref","data","post","_post$frontmatter","frontmatter","title","description","date","tags","thumbnail","disqusConfig","url","fields","slug","identifier","tagsText","map","tag","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_9___default","a","to","blogTagUrl","key","className","relatedPost","edges","nodeObject","node","_node$frontmatter","id","_components_dark_link__WEBPACK_IMPORTED_MODULE_4__","blogUrl","_components_wrapper__WEBPACK_IMPORTED_MODULE_6__","single","react_helmet__WEBPACK_IMPORTED_MODULE_11___default","meta","name","content","publicURL","_components_card__WEBPACK_IMPORTED_MODULE_3__","_components_section_divider__WEBPACK_IMPORTED_MODULE_5__","dangerouslySetInnerHTML","__html","html","disqus_react__WEBPACK_IMPORTED_MODULE_8__","shortname","config","query","__webpack_require__","d","COLOR","primary","black","dark","blue","blueFade","white","yellow","gray","orange","NavbarWrapper","styled_base_browser_esm","target","styles","LinkNav","children","core_browser_esm","NavItem","gatsby_link_default","activeClassName","partiallyActive","Example","props","_this","_React$Component","call","this","toggle","bind","assertThisInitialized_default","state","isOpen","setState","render","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","aria-label","Nav","navbar_LinkNav","React","Component","Footer","marginTop","borderTop","padding","textAlign","fontSize","backgroundColor","footer","StretchContainer","Stretch","css","FullPage","Layout","useEffect","loadingStyle","document","getElementById","loadingBody","remove","Helmet_default","globalStyles","navbar_Example","mid","ColProps","md","lg","xl","layout","Container","Row","Col","Card","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","margin","borderRadius","boxShadow","blogListUrl","projectUrl","subpath","page","BlackLink","Link",":hover","textDecoration","SectionDivider"],"mappings":"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","file":"component---src-templates-blog-post-js-385a3ad0ed0e2ee6b22c.js","sourcesContent":["import 'katex/dist/katex.min.css'\nimport 'prismjs/themes/prism-okaidia.css'\n\nimport Card from '@/components/card'\nimport DarkLink from '@/components/dark-link'\nimport SectionDivider from '@/components/section-divider'\nimport Wrapper from '@/components/wrapper'\nimport { blogTagUrl, blogUrl } from '@/utils/urls'\nimport { DiscussionEmbed } from 'disqus-react'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\nimport React from 'react'\nimport Helmet from 'react-helmet'\n\nexport default ({ data }) => {\n  const post = data.post\n  const { title, description, date, tags, thumbnail } = post.frontmatter\n  const disqusConfig = {\n    url: 'http://fairuzi10.github.io/blog' + post.fields.slug,\n    identifier: 'blog' + post.fields.slug,\n    title: post.frontmatter.title\n  }\n\n  const tagsText = tags.map(tag => (\n    <Link to={blogTagUrl(tag)} key={tag} className=\"mx-1\">\n      #{tag}{' '}\n    </Link>\n  ))\n  const relatedPost = data.relatedPost.edges.map(nodeObject => {\n    const node = nodeObject.node\n    const { title, description } = node.frontmatter\n    return (\n      <div className=\"col-md-6 pt-3\" key={node.id}>\n        <strong>\n          <DarkLink to={blogUrl(node.fields.slug)}>{title}</DarkLink>\n        </strong>\n        <br />\n        {description}\n      </div>\n    )\n  })\n\n  return (\n    <Wrapper single>\n      <Helmet\n        title={title}\n        meta={[\n          { name: 'description', content: description },\n          { name: 'og:title', content: title },\n          { name: 'og:image', content: thumbnail.publicURL }\n        ]}\n      />\n      <Card>\n        {date}\n        <SectionDivider />\n        <h1>{title}</h1>\n        <div\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          className=\"blog-post\"\n        />\n        <SectionDivider />\n        {tagsText}\n        <SectionDivider />\n        <div>\n          <strong>\n            <span className=\"black-link\">Related Post:</span>\n          </strong>\n          <br />\n          <div className=\"row\">{relatedPost}</div>\n        </div>\n        <SectionDivider />\n      </Card>\n      <Card>\n        <DiscussionEmbed\n          shortname=\"fairuzi10-github-io\"\n          config={disqusConfig}\n        />\n      </Card>\n    </Wrapper>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostQuery($slug: String!, $tags: [String]!) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM YYYY\")\n        description\n        tags\n        thumbnail {\n          publicURL\n        }\n      }\n      fields {\n        slug\n      }\n    }\n    relatedPost: allMarkdownRemark(\n      limit: 2\n      sort: { fields: [frontmatter___weight], order: DESC }\n      filter: {\n        frontmatter: { tags: { in: $tags } }\n        fields: { slug: { ne: $slug } }\n      }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","export const COLOR = {\n  primary: '#007bff',\n  black: '#000000',\n  dark: '#263646',\n  blue: '#1B1464',\n  blueFade: '#e6ecf0',\n  white: '#ffffff',\n  yellow: '#f1c40f',\n  gray: '#34495e',\n  orange: '#F79F1F'\n}\n","import styled from '@emotion/styled'\nimport Link from 'gatsby-link'\nimport React from 'react'\nimport {\n  Collapse,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  NavItem\n} from 'reactstrap'\n\nconst NavbarWrapper = styled.div({\n  marginBottom: '3rem',\n  boxShadow: '0px 10px 20px -10px rgba(0,64,128,0.2)'\n})\n\nconst LinkNav = ({ to, children }) => (\n  <NavItem>\n    <Link className=\"nav-link\" to={to} activeClassName=\"active\" partiallyActive>\n      {children}\n    </Link>\n  </NavItem>\n)\n\nexport default class Example extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.toggle = this.toggle.bind(this)\n    this.state = {\n      isOpen: false\n    }\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    })\n  }\n  render() {\n    return (\n      <NavbarWrapper>\n        <Navbar color=\"white\" light expand=\"md\" className=\"py-3\">\n          <NavbarBrand href=\"/\">Fairuzi10</NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n          <Collapse\n            isOpen={this.state.isOpen}\n            navbar\n            aria-label=\"Toggle navbar\"\n          >\n            <Nav className=\"ml-auto\" navbar>\n              <LinkNav to=\"/blog/\">Blog</LinkNav>\n              <LinkNav to=\"/project/\">Project</LinkNav>\n              <LinkNav to=\"/meme/\">Meme</LinkNav>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </NavbarWrapper>\n    )\n  }\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { COLOR } from '@/utils/theme'\n\nconst Footer = styled.footer({\n  marginTop: '1rem',\n  borderTop: '1px solid #e5e5e5',\n  padding: '3rem 0',\n  textAlign: 'center',\n  color: COLOR.dark,\n  fontSize: '0.8rem',\n  backgroundColor: COLOR.white\n})\n\nexport default () => <Footer>Muhammad Fairuzi Teguh © 2019</Footer>\n","import styled from '@emotion/styled'\n\nexport const StretchContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const StretchedContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const Stretch = styled.div`\n  flex: 1;\n`\n","import { css } from '@emotion/core'\nimport { COLOR } from '@/utils/theme'\n\nexport default css`\n  @import url('https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css');\n  @import url('https://fonts.googleapis.com/css?family=Arvo');\n\n  * {\n    font-family: 'Arvo';\n  }\n\n  body {\n    background-color: ${COLOR.blueFade};\n  }\n\n  .black-link {\n    color: ${COLOR.dark} !important;\n  }\n\n  .black-link:hover {\n    color: ${COLOR.dark} !important;\n  }\n\n  .grey-link {\n    color: #777 !important;\n  }\n\n  .grey-link:hover {\n    color: #777 !important;\n  }\n\n  .img-caption {\n    margin-top: -1em;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.5);\n    margin-bottom: 1em;\n  }\n\n  .gatsby-resp-image-link {\n    margin-bottom: 1em;\n  }\n\n  blockquote {\n    background: #f8f9fa;\n    border-left: 0.3em solid #e5e5e5;\n    padding: 1em;\n  }\n\n  hr.section-divider {\n    margin: 3em 0;\n    border: 0;\n    text-align: center;\n  }\n\n  hr.section-divider:before {\n    content: '...';\n    font-size: 2em;\n    top: -1em;\n    position: relative;\n    letter-spacing: 1em;\n    margin-left: 1em;\n    color: rgb(33, 37, 41);\n  }\n\n  .blog-post p {\n    text-align: justify;\n  }\n`\n","import React, { useEffect } from 'react'\nimport Helmet from 'react-helmet'\nimport Navbar from '../components/navbar'\nimport Footer from '../components/footer'\nimport styled from '@emotion/styled'\nimport { Global } from '@emotion/core'\nimport { StretchContainer } from '../components/stretch'\nimport globalStyles from './global-styes'\n\nconst FullPage = styled.div({\n  minHeight: '100vh',\n  height: '1px'\n})\n\nconst Layout = ({ children }) => {\n  useEffect(() => {\n    const loadingStyle = document.getElementById('loading-style')\n    const loadingBody = document.getElementById('loading-body')\n    if (loadingStyle) loadingStyle.remove()\n    if (loadingBody) loadingBody.remove()\n  }, [])\n  return (\n    <FullPage>\n      <Helmet\n        title=\"Fairuzi10\"\n        meta={[\n          {\n            name: 'google-site-verification',\n            content: 'uu3IRN8Av5aq9r0lEKhIJjoLFIi1T8TFKymt0f-68bk'\n          }\n        ]}\n      />\n      <Global styles={globalStyles} />\n      <StretchContainer>\n        <Navbar />\n        {children}\n        <Footer />\n      </StretchContainer>\n    </FullPage>\n  )\n}\n\nexport default Layout\n","import React from 'react'\nimport Layout from './layout.js'\nimport { Row, Col, Container } from 'reactstrap'\nimport { Stretch } from '../components/stretch'\n\n/**\n * Single means one page only contains 1 column.\n * Mid means one page only contains 1 column and should be positioned in the center\n */\nexport default ({ children, single, mid }) => {\n  if (mid) single = true\n  const ColProps = single ? { md: '10', lg: '9', xl: '8' } : {}\n  return (\n    <Layout>\n      <Stretch className={mid ? 'd-flex align-items-center text-center' : ''}>\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col {...ColProps}>{children}</Col>\n          </Row>\n        </Container>\n      </Stretch>\n    </Layout>\n  )\n}\n","import styled from '@emotion/styled'\nimport { COLOR } from '@/utils/theme'\n\nexport const Card = styled.div({\n  backgroundColor: COLOR.white,\n  padding: '2rem',\n  margin: '1rem',\n  borderRadius: '0.5rem',\n  boxShadow: '0px 10px 40px -10px rgba(0,64,128,0.2)'\n})\n\nexport default Card\n","export const blogUrl = subpath => '/blog/' + subpath + '/'\nexport const blogListUrl = page => '/blog/' + (page === 1 ? '' : page + '/')\nexport const blogTagUrl = tag => '/blog/tag/' + tag + '/'\nexport const projectUrl = subpath => '/project/' + subpath + '/'\n","import styled from '@emotion/styled'\nimport { COLOR } from '../utils/theme'\nimport { Link } from 'gatsby'\n\nexport const BlackLink = styled(Link)({\n  color: COLOR.dark,\n  ':hover': {\n    color: COLOR.dark,\n    textDecoration: 'underline'\n  }\n})\n\nexport default BlackLink\n","import styled from '@emotion/styled'\n\nexport const SectionDivider = styled.hr({\n  margin: '1rem 0'\n})\n\nexport default SectionDivider\n"],"sourceRoot":""}