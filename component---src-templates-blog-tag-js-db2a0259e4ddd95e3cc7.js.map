{"version":3,"sources":["webpack:///./src/templates/blog-tag.js"],"names":["query","Page","data","pageContext","postList","allMarkdownRemark","edges","map","node","key","fields","slug","page","pageCount","tag","postCount","totalCount","single","className","to","index"],"mappings":"8FAAA,4IAkCaA,EAAK,YAiCHC,UA3DF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAEdC,EADQF,EAAKG,kBAAkBC,MACdC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACzB,YAAC,OAAD,CAAMA,KAAMA,EAAMC,IAAKD,EAAKE,OAAOC,UAE7BC,EAAyBT,EAAzBS,KAAMC,EAAmBV,EAAnBU,UAAWC,EAAQX,EAARW,IACnBC,EAAYb,EAAKG,kBAAkBW,WAEzC,OACE,YAAC,IAAD,CAASC,QAAM,GACb,YAAC,IAAD,CAAMC,UAAU,QACd,sBACGH,EADH,yBACoCD,GAEpC,+BACQ,YAAC,IAAD,CAAMK,GAAG,cAAT,iBAGV,YAAC,IAAD,CAAMD,UAAU,QAAQd,GACxB,mBAAKc,UAAU,iCACb,YAAC,IAAD,CAAYE,MAAOR,EAAMC,UAAWA","file":"component---src-templates-blog-tag-js-db2a0259e4ddd95e3cc7.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Link from 'gatsby-link'\nimport Wrapper from '../components/wrapper'\nimport Pagination from '../components/pagination'\nimport { Post } from './blog-list'\nimport Card from '@/components/card'\n\nconst Page = ({ data, pageContext }) => {\n  const edges = data.allMarkdownRemark.edges\n  const postList = edges.map(({ node }) => (\n    <Post node={node} key={node.fields.slug} />\n  ))\n  const { page, pageCount, tag } = pageContext\n  const postCount = data.allMarkdownRemark.totalCount\n\n  return (\n    <Wrapper single>\n      <Card className=\"mb-3\">\n        <h4>\n          {postCount} pos dilabeli dengan #{tag}\n        </h4>\n        <h6>\n          Lihat <Link to=\"/blog/tag/\">semua label</Link>\n        </h6>\n      </Card>\n      <Card className=\"mb-3\">{postList}</Card>\n      <div className=\"d-flex justify-content-center\">\n        <Pagination index={page} pageCount={pageCount} />\n      </div>\n    </Wrapper>\n  )\n}\n\nexport const query = graphql`\n  query blogTagQuery($skip: Int!, $limit: Int!, $tag: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            description\n            tags\n            thumbnail {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Page\n"],"sourceRoot":""}